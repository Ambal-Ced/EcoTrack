// <auto-generated />
using EcoTrack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcoTrack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241006065732_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoTrack.Models.electrates", b =>
                {
                    b.Property<int>("sepa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sepa"));

                    b.Property<string>("dates1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ids")
                        .HasColumnType("int");

                    b.Property<decimal>("kwrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totbillelec")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("sepa");

                    b.ToTable("electrates");
                });

            modelBuilder.Entity("EcoTrack.Models.info", b =>
                {
                    b.Property<int>("ids")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ids"));

                    b.Property<int>("conto")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ids");

                    b.ToTable("info");
                });

            modelBuilder.Entity("EcoTrack.Models.insights", b =>
                {
                    b.Property<int>("iid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iid"));

                    b.Property<int>("ids")
                        .HasColumnType("int");

                    b.Property<string>("insight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iid");

                    b.ToTable("insights");
                });

            modelBuilder.Entity("EcoTrack.Models.pfeed", b =>
                {
                    b.Property<int>("fid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("fid"));

                    b.Property<string>("feedbacks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ids")
                        .HasColumnType("int");

                    b.HasKey("fid");

                    b.ToTable("pfeed");
                });

            modelBuilder.Entity("EcoTrack.Models.ppost", b =>
                {
                    b.Property<int>("pid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pid"));

                    b.Property<string>("feedbacks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ids")
                        .HasColumnType("int");

                    b.HasKey("pid");

                    b.ToTable("ppost");
                });

            modelBuilder.Entity("EcoTrack.Models.waterrates", b =>
                {
                    b.Property<int>("sepb")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sepb"));

                    b.Property<decimal>("cbrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("dates2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ids")
                        .HasColumnType("int");

                    b.Property<decimal>("totbillwater")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("sepb");

                    b.ToTable("waterrates");
                });
#pragma warning restore 612, 618
        }
    }
}
